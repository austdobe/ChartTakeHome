{"version":3,"sources":["components/chart.styles.js","components/chart.tsx","pages/main.styles.js","pages/main.tsx","App.tsx","index.tsx"],"names":["Wrapper","styled","div","Chart","props","firstBestData","FirstWork","secondBestData","SecondWork","labels","i","Titles","push","useMemo","included","num","filter","title","firstBest","splice","secondBest","handleProps","setData","work","data","map","length","x","y","revision","datasets","id","label","borderColor","backgroundColor","className","datasetIdKey","options","responsive","layout","padding","top","right","left","bottom","scales","suggestedMin","suggestedMax","plugins","tooltip","callbacks","context","raw","bodyColor","bodyFontSize","legend","display","height","FormWrapper","Form","form","FormInput","input","NumberInput","Checkbox","Content","search","selectedWork","MainPage","useState","FirstSelectedWork","SetFirstSelectedWork","SecondSelectedWork","SetSecondSelectedWork","firstAuthName","setFirstAuthName","secondAuthName","setSecondAuthName","TitleWorks","setTitleWorks","firstBestSeller","setFirstBestSeller","secondBestSeller","setSecondBestSeller","isIncluded","setIsIncluded","isActive","setIsActive","getAuthorWork","key","Author","fetch","then","response","json","entries","onSubmit","event","preventDefault","docs","top_work","catch","e","console","log","value","placeholder","onChange","target","icon","onClick","name","type","Best","style","background","firstAuth","secondAuth","App","library","add","fas","faMagnifyingGlass","register","registerables","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f1877c3.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\n\r\nexport const Wrapper = styled.div ` \r\n    display: block;\r\n    position: relative;\r\n    width: 100%;\r\n\r\n    .y_label{\r\n        font-size: 18px;\r\n        text-align: left;\r\n        left:0;\r\n    }\r\n    .x_label {\r\n        display: absolute;\r\n        bottom: 0;\r\n        font-size: 18px;\r\n    }\r\n    \r\n`","import { useState, useEffect, useMemo } from \"react\";\r\nimport { Line, Chart as ChartJS } from \"react-chartjs-2\";\r\nimport { Wrapper } from \"./chart.styles\";\r\n\r\n\r\nexport interface ISelectedWork {\r\n    firstAuth: string\r\n    FirstWork: Array<object>\r\n    firstBest?: string\r\n    secondAuth: string\r\n    SecondWork: Array<object>\r\n    secondBest?: string\r\n    Titles:any\r\n    included: boolean\r\n}\r\n\r\nexport interface IState {\r\n    id: number,\r\n    label: string,\r\n    data: Array<Object>,\r\n    borderColor: string,\r\n    backgroundColor: string,\r\n}\r\n\r\nconst initialState ={\r\n        \r\n    id: 1,\r\n    label: \" Revisions \",\r\n    data: [],\r\n    borderColor: 'rgb(255, 99, 132)',\r\n    backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n        \r\n}\r\n\r\n\r\nconst Chart = (props:ISelectedWork) => {\r\n    let firstBestData = props.FirstWork\r\n    let secondBestData = props.SecondWork\r\n    const labels = []\r\n    for(var i = 1; i <= props.Titles; i++) {\r\n        labels.push(`Title ${i}`)\r\n    }\r\n    \r\n    const handleProps = () => {\r\n        if(props.included){\r\n            const num = props.Titles\r\n            labels[num] = \"Best Seller\"\r\n            props.FirstWork?.filter((title:any, i:number) => {\r\n                if(title.title === props.firstBest){\r\n                    firstBestData.splice(i, 1)\r\n                    firstBestData[num] = title\r\n                }\r\n                return\r\n            })\r\n            props.SecondWork?.filter((title:any, i:number) => {\r\n                if(title.title === props.secondBest){\r\n                    secondBestData.splice(i, 1)\r\n                    secondBestData[num] = title\r\n                }\r\n                return\r\n            })\r\n        }\r\n    }\r\n    useMemo(() => {\r\n        firstBestData = props.FirstWork\r\n        secondBestData = props.SecondWork\r\n        handleProps();\r\n    }, [props.Titles, firstBestData, secondBestData, props.included, labels]);\r\n    \r\n    const options = {\r\n        responsive: true,\r\n        layout: {\r\n            padding: {\r\n                top: 10,\r\n                right: 10,\r\n                left: 50,\r\n                bottom: 10\r\n            }\r\n        },\r\n        scales: {\r\n            y:{\r\n                suggestedMin: 0,\r\n                suggestedMax: 50,\r\n            },\r\n          },\r\n        plugins: {\r\n            tooltip: {\r\n                callbacks: {\r\n                    title: function(context:any) {\r\n                        if(context.length > 1){\r\n                            return `1. ${context[0].raw.title} \\n2. ${context[1].raw.title}`\r\n                        }\r\n                        return `${context[0].raw.title}`\r\n                    },\r\n                    label: function(context:any) {\r\n                        return `Revisions: ${context.raw.y}`\r\n                    }\r\n                },\r\n                bodyColor: 'white',\r\n                bodyFontSize: '50',\r\n                padding: 20,\r\n            },\r\n            legend: {\r\n                display:    false,\r\n            },\r\n        },\r\n    }\r\n    const setData =(work:any) => {\r\n        const data = work.map((work:any, i:number) => {if(i < labels.length) {return {x:i +1, y: work.revision, title:work.title}}})\r\n        return data\r\n    }\r\n    const data = {\r\n        labels, \r\n        datasets: [\r\n            {\r\n                id: 1,\r\n                label: \" Revisions \",\r\n                data: setData(firstBestData),\r\n                borderColor: 'rgb(255, 99, 132)',\r\n                backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n            },\r\n            {\r\n                id: 2,\r\n                label: \" Revisions \",\r\n                data: setData(secondBestData),\r\n                borderColor: 'rgb(53, 162, 235)',\r\n                backgroundColor: 'rgba(53, 162, 235, 0.5)',\r\n            }\r\n        ]\r\n    \r\n    }\r\n    return (\r\n\r\n        <Wrapper>\r\n            <h2 className=\"y_label\">Revisions</h2>\r\n            <div>\r\n                <Line datasetIdKey='id' options={options} data={data} height={'80%'}/>\r\n            </div>\r\n            <h2 className=\"x_label\">Works</h2>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default Chart","import styled from 'styled-components'\r\n\r\nexport const FormWrapper = styled.div ` \r\n    text-align: center;\r\n    display: grid;\r\n    grid-template-columns: auto auto auto auto;\r\n    grid-auto-flow: row dense;\r\n    justify-content: space-evenly;\r\n    text-align: center;\r\n    gap: 5px;\r\n    background-color: white;\r\n    font-size: 18px;\r\n    margin-top: 20px;;\r\n\r\n`\r\n\r\nexport const Wrapper = styled.div ` \r\n    text-align: center;\r\n    font-size: 30px;\r\n    background-color: #f3f6f4;\r\n\r\n`\r\n\r\nexport const Form = styled.form ` \r\n    display: flex;\r\n    width: 100%;\r\n    margin: 10px auto;\r\n    align-items: center;\r\n    justify-items: center;\r\n    h3{\r\n        margin-left: 20px;\r\n    }\r\n\r\n    input {\r\n        height:50%;\r\n        font-size: 18px;\r\n        border: solid 1px #bcbcbc;\r\n        box-shadow: 1px 1px 5px 0 #bcbcbc;\r\n    }\r\n    .icon{\r\n        position: relative;\r\n        right:30px;\r\n        top:0;\r\n        font-size: 20px;\r\n        transform: rotateZ(90deg);\r\n    }\r\n    .Arrow {\r\n        align-self: center;\r\n        justify-self: center;\r\n        margin:0 10px;\r\n    }\r\n    button{\r\n        border:none;\r\n        background-color: transparent;\r\n    }\r\n`\r\nexport const FormInput = styled.input ` \r\n    width:  100%;\r\n    font-size:18px;\r\n    padding: 5px 10px;\r\n    border-radius: 5px;\r\n`\r\nexport const NumberInput = styled.input ` \r\n    width: 30%;\r\n    text-align: center;\r\n    ::-webkit-outer-spin-button,\r\n    ::-webkit-inner-spin-button {\r\n        -webkit-appearance: none;\r\n        margin: 0;\r\n    }\r\n\r\n`\r\n\r\nexport const Checkbox = styled.div` \r\n    width: 25px;\r\n    height: 25px;\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    margin-left: 20px;\r\n    margin-right: 10px;\r\n    box-shadow: 0 0 0 2px #bcbcbc;\r\n    padding: 1px;\r\n\r\n    div{\r\n        height: 100%;\r\n        width: 100%;\r\n        border: none;\r\n    }\r\n\r\n`\r\n\r\nexport const Content = styled.div ` \r\n    width: 100%;\r\n    height: 100%;\r\n\r\n`","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { solid } from '@fortawesome/fontawesome-svg-core/import.macro'\r\nimport { useState } from \"react\";\r\nimport Chart from \"../components/chart\";\r\nimport { Wrapper, FormWrapper, Form, FormInput, NumberInput, Checkbox, Content } from \"./main.styles\";\r\n\r\n\r\nconst search = 'https://openlibrary.org/search/authors.json?q='\r\n\r\nexport interface ISelectedWork {\r\n    work: Array<object>\r\n}\r\n\r\nconst selectedWork: ISelectedWork = {\r\n    work: [],\r\n}\r\n\r\nconst MainPage = () => {\r\n    const [ FirstSelectedWork, SetFirstSelectedWork ] = useState(selectedWork)\r\n    const [ SecondSelectedWork, SetSecondSelectedWork ] = useState(selectedWork)\r\n    const [ firstAuthName, setFirstAuthName ] = useState('First Author')\r\n    const [ secondAuthName, setSecondAuthName ] = useState('Second Author')\r\n    const [ TitleWorks, setTitleWorks ] = useState(4)\r\n    const [ firstBestSeller, setFirstBestSeller ] = useState('')\r\n    const [ secondBestSeller, setSecondBestSeller ] = useState('')\r\n    const [ isIncluded, setIsIncluded ] = useState(true)\r\n    const [ isActive, setIsActive ] = useState(true)\r\n    const handleFirstName = (event:any) => {\r\n        event.preventDefault()\r\n        setFirstAuthName(event.target.value)\r\n    }\r\n    const handleSecondName = (event:any) => {\r\n        event.preventDefault()\r\n        setSecondAuthName(event.target.value)\r\n    }\r\n    const handleSeller = (event:any) => {\r\n        event.preventDefault()\r\n        const Best = isIncluded\r\n        setIsActive(!isActive)\r\n        setIsIncluded(!Best)\r\n    }\r\n    const setWorks = (event:any) => {\r\n        event.preventDefault()\r\n        setTitleWorks(event.target.value)\r\n    }\r\n    const AddWorks = (event:any) => {\r\n        event.preventDefault()\r\n        const num = TitleWorks\r\n        setTitleWorks(num + 1)\r\n    }\r\n    const RemoveWorks = (event:any) => {\r\n        event.preventDefault()\r\n        const num = TitleWorks\r\n        if(num > 1){\r\n            setTitleWorks(num - 1)\r\n        }\r\n    }\r\n    \r\n    const getAuthorWork = (key:String, Author:String) => {\r\n        fetch(`https://openlibrary.org/authors/${key}/works.json?limit=100`)\r\n        .then((response) => response.json())\r\n        .then((data)=> {\r\n            if(Author === \"First\") {\r\n                SetFirstSelectedWork({work:data.entries})      \r\n            }\r\n            if(Author === \"Second\") {\r\n                SetSecondSelectedWork({work:data.entries})\r\n            }\r\n        })\r\n\r\n    }\r\n    const handleFirstAuthor = (event:any) => {\r\n        event.preventDefault()\r\n        fetch(`${search}${firstAuthName}`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            setFirstBestSeller(data.docs[0].top_work)\r\n            getAuthorWork(data.docs[0].key, \"First\")\r\n        })\r\n        .catch(e => console.log(e))\r\n        \r\n    }\r\n    const handleSecondAuthor = (event:any) => {\r\n        event.preventDefault()\r\n        fetch(`${search}${secondAuthName}`)\r\n        .then((response) => response.json())\r\n        .then((data)=> {\r\n            setSecondBestSeller(data.docs[0].top_work)\r\n            getAuthorWork(data.docs[0].key, \"Second\")\r\n        })\r\n        .catch(e => console.log(e))\r\n    }\r\n    return (\r\n        <Wrapper data-testid=\"greetings-container\">Author Revision Head to Head\r\n            <FormWrapper>\r\n                <Form  onSubmit={handleFirstAuthor} >\r\n                    <FormInput data-testid=\"firstAuth\" value={firstAuthName} placeholder=\"First Author\" onChange={handleFirstName} />\r\n                    <div className=\"icon\">\r\n                        <FontAwesomeIcon icon={solid('magnifying-glass')} />\r\n                    </div>\r\n                </Form>\r\n                <Form  onSubmit={handleSecondAuthor} >\r\n                    <FormInput placeholder=\"Second Author\" onChange={handleSecondName} />\r\n                    <div className=\"icon\">\r\n                        <FontAwesomeIcon icon={solid('magnifying-glass')} />\r\n                    </div>\r\n                </Form>\r\n                <Form>\r\n                    <button onClick={RemoveWorks} >\r\n                        <FontAwesomeIcon className=\"Arrow\" icon={solid('angle-down')} />\r\n                    </button>\r\n                    <NumberInput placeholder={TitleWorks} name=\"works\" type=\"number\" value={TitleWorks} onChange={setWorks} />\r\n                    <button onClick={AddWorks} >\r\n                        <FontAwesomeIcon className=\"Arrow\" icon={solid('angle-up')} />\r\n                    </button>\r\n                    <h3>Number of Works</h3>\r\n                </Form>\r\n                <Form>\r\n                    <Checkbox onClick={handleSeller}><div style={{background: isActive ? \"radial-gradient(#bdbdbd, #eeeeee)\" : ''}}></div></Checkbox>\r\n                    <h3>Include Best Seller</h3>\r\n                </Form>\r\n            </FormWrapper>\r\n            <Content>\r\n                <Chart \r\n                    firstAuth={firstAuthName}\r\n                    FirstWork={FirstSelectedWork.work} \r\n                    firstBest={firstBestSeller}\r\n                    secondAuth={secondAuthName}\r\n                    SecondWork={SecondSelectedWork.work}\r\n                    secondBest={secondBestSeller} \r\n                    Titles={TitleWorks} \r\n                    included={isIncluded}\r\n                />\r\n            </Content>\r\n        </ Wrapper>\r\n    )\r\n\r\n}\r\n\r\nexport default MainPage","import MainPage from './pages/main';\r\nimport { Chart, registerables} from 'chart.js';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faMagnifyingGlass, fas } from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(fas, faMagnifyingGlass)\r\n\r\nChart.register(...registerables);\r\n\r\nexport function App(): JSX.Element {\r\n  return (\r\n        <div>\r\n          <MainPage />\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}